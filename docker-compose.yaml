version: '2.0'

services:
  nginx:
    container_name: nginx
    restart: always
    image: nginx:1.11.6-alpine
    ports:
      - 8080:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./nginx/sites:/var/www/html
  nginx-proxy:
    image: jc21/nginx-proxy-manager-base:latest
    ports:
      - 80:80
      - 81:81
      - 43:443
    environment:
      - NODE_ENV=development
      - FORCE_COLOR=1
    volumes:
      - ./nginx/proxy/data:/data
      - ./nginx/proxy/data/letsencrypt:/etc/letsencrypt
      - ./nginx/proxy/app:/app
      - ./nginx/proxy/app/rootfs/etc/nginx:/etc/nginx
    working_dir: /app
    depends_on:
      - db
    links:
      - db
    command: node --max_old_space_size=250 --abort_on_uncaught_exception node_modules/nodemon/bin/nodemon.js
  npm:
    container_name: npm
    image: verdaccio/verdaccio:4.0.0-beta.8
    ports:
      - 4873:4873
    volumes:
      - ./npm/packages:/verdaccio/storage
      - ./npm/conf:/verdaccio/conf
  mongo:
    image: mongo:3.5
    volumes:
      - type: bind
        source: ./mongo/data/db
        target: /data/db
  yapi:
    image: branchzero/yapi:1.3.8
    command: /bin/bash -c "[ ! -e /home/yapi/log/init.lock ] && npm run install-server && touch /home/yapi/log/init.lock; npm run start"
    links:
      - mongo:mongo
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./yapi/config.json
        target: /home/yapi/config.json
      - type: bind
        source: ./yapi/log
        target: /home/yapi/log
